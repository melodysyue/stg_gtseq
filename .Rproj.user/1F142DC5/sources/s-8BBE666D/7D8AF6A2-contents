library(tidyverse)

rm(list=ls())

##Genotyping on all individuals; 
##Follow GTscore pipeline
#load GTscore
source("./GTscore-master/GTscore-master/GTscore.R")


#load locus table and allele reads file
singleSNP_locusTable<-read.delim("./gtscore/LocusTable_singleSNPs.txt",header=TRUE,stringsAsFactors=FALSE)
singleSNP_alleleReads<-read.delim("./gtscore/AlleleReads_singleSNPs.txt",header=TRUE,row.names=1,stringsAsFactors=FALSE)

head(singleSNP_locusTable)
singleSNP_alleleReads[1:5,1:5]

#change ploidy to 4
singleSNP_locusTable$ploidy=4

#update sample names
col_names <- colnames(singleSNP_alleleReads) %>% 
  str_remove_all("_L001_R1_001") 

col_names <- as.character(map(strsplit(col_names, split="_"), 1)) #remove S##
col_names <- str_replace_all(col_names, "\\.", "-") #replace . with -
col_names <- str_replace_all(col_names, "^X", "") #remove leading X
colnames(singleSNP_alleleReads) <- col_names

head(singleSNP_locusTable)
singleSNP_alleleReads[1:5,1:5]


#generate singleSNP genotypes using the polyGen algorithm
#it takes a while, be patient!
polyGenResults_singleSNP<-polyGen(singleSNP_locusTable,singleSNP_alleleReads)
dim(polyGenResults_singleSNP)
polyGenResults_singleSNP[1:5,1:5]

###summarize single SNP results for samples
#it takes a while, be patient!
singleSNP_sampleSummary<-summarizeSamples(polyGenResults_singleSNP,singleSNP_alleleReads)
#conScore: heterzygous contamination score, not so useful for ploidy-4; 
#The contamination score is the proportion of heterozygous genotypes whose allele ratios significantly differ from 1:1 ratios

#combine AmpliconReadCounter individual summary data with GTscore sample summary
GTscore_individualSummary<-read.table("gtscore/GTscore_individualSummary_edited.txt", header=T)

GTscore_individualSummary<-left_join(GTscore_individualSummary,singleSNP_sampleSummary,by="sample")


write.table(GTscore_individualSummary, "./singleSNP_individuals_summary_allInds.txt", quote=F, row.names = F)

###summarize single SNP resutls for loci
singleSNP_summary<-summarizeGTscore(singleSNP_alleleReads, singleSNP_locusTable, polyGenResults_singleSNP)
write.table(singleSNP_summary, "singleSNP_loci_summary_allInds.txt", quote=F, row.names = F)

#avgReaddepth: total reads/number of samples with non-zero reads;




###Plot genotype scatterplots for each sample
#Scatter Plots can show evidence of contamination or elevated ploidy
#plotGenotypes_sample(singleSNP_locusTable, singleSNP_alleleReads, polyGenResults_singleSNP, 
#                     type='scatter', savePlot="Y", saveDir="./scatterPlots_sample") #only works if plodiy is set as 2;
#Since sturgeon has a ploidy of 4, all the scatter plots by individuals will look like contaminated or with elevated ploidy, which is expected.
###plot genotype scatterplots per locus
plotGenotypes(singleSNP_locusTable, singleSNP_alleleReads, polyGenResults_singleSNP, 
              type='scatter', savePlot="Y", saveDir="./scatterPlots_loci_allInds")


summary(GTscore_individualSummary)

